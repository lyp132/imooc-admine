{
    "sourceFile": "src/test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1695003307582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695978454748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,38 +0,0 @@\n-import path from 'path'\r\n-import i18n from '@/i18n'\r\n-/**\r\n- * 筛选出可供搜索的路由对象\r\n- * @param routes 路由表\r\n- * @param basePath 基础路径，默认为 /\r\n- * @param prefixTitle\r\n- */\r\n-export const generateRoutes = (routes, basePath = '/', prefixTitle = []) => {\r\n-  // 创建 result 数据\r\n-  let res = []\r\n-  // 循环 routes 路由\r\n-  for (const route of routes) {\r\n-    // 创建包含 path 和 title 的 item\r\n-    const data = {\r\n-      path: path.resolve(basePath, route.path),\r\n-      title: [...prefixTitle]\r\n-    }\r\n-    // 当前存在 meta 时，使用 i18n 解析国际化数据，组合成新的 title 内容\r\n-    // 动态路由不允许被搜索\r\n-    // 匹配动态路由的正则\r\n-    const re = /.*\\/:.*/\r\n-    if (route.meta && route.meta.title && !re.exec(route.path)) {\r\n-      const i18ntitle = i18n.global.t(`msg.route.${route.meta.title}`)\r\n-      data.title = [...data.title, i18ntitle]\r\n-      res.push(data)\r\n-    }\r\n-\r\n-    // 存在 children 时，迭代调用\r\n-    if (route.children) {\r\n-      const tempRoutes = generateRoutes(route.children, data.path, data.title)\r\n-      if (tempRoutes.length >= 1) {\r\n-        res = [...res, ...tempRoutes]\r\n-      }\r\n-    }\r\n-  }\r\n-  return res\r\n-}\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1699697862881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+{\r\n+  \"success\": true,\r\n+  \"code\": 200,\r\n+  \"data\": {\r\n+      \"list\": [\r\n+          {\r\n+              \"role\": [\r\n+                  {\r\n+                      \"id\": \"1\",\r\n+                      \"title\": \"超级管理员\"\r\n+                  }\r\n+              ],\r\n+              \"_id\": \"654e8bc0039db755c7698269\",\r\n+              \"id\": \"612710a9ec87aa543c9c3420\",\r\n+              \"openTime\": \"1433088000000\",\r\n+              \"username\": \"super-admin\",\r\n+              \"mobile\": \"188xxxx0001\",\r\n+              \"avatar\": \"https://m.imooc.com/static/wap/static/common/img/logo-small@2x.png\"\r\n+          },\r\n+          {\r\n+              \"role\": [\r\n+                  {\r\n+                      \"id\": \"2\",\r\n+                      \"title\": \"管理员\"\r\n+                  }\r\n+              ],\r\n+              \"_id\": \"654e8bc0039db755c769826a\",\r\n+              \"id\": \"612710a9ec87aa543c9c3421\",\r\n+              \"username\": \"admin\",\r\n+              \"openTime\": \"1559318400000\",\r\n+              \"mobile\": \"188xxxx0002\",\r\n+              \"avatar\": \"https://img4.sycdn.imooc.com/61110c2b0001152907400741-140-140.jpg\"\r\n+          },\r\n+          {\r\n+              \"role\": [\r\n+                  {\r\n+                      \"id\": \"6\",\r\n+                      \"title\": \"员工\"\r\n+                  },\r\n+                  {\r\n+                      \"id\": \"5\",\r\n+                      \"title\": \"保安队长\"\r\n+                  },\r\n+                  {\r\n+                      \"id\": \"4\",\r\n+                      \"title\": \"销售经理\"\r\n+                  },\r\n+                  {\r\n+                      \"id\": \"3\",\r\n+                      \"title\": \"人事经理\"\r\n+                  }\r\n+              ],\r\n+              \"_id\": \"654e8bc0039db755c769826b\",\r\n+              \"id\": \"612710a9ec87aa543c9c3422\",\r\n+              \"username\": \"test\",\r\n+              \"openTime\": \"1633017600000\",\r\n+              \"mobile\": \"188xxxx0003\",\r\n+              \"avatar\": \"https://res.lgdsunday.club/zhang-san.jpg\"\r\n+          },\r\n+          {\r\n+              \"role\": [],\r\n+              \"_id\": \"654f247a8a667a5a1144de75\",\r\n+              \"id\": \"ea4813e3-2275-4ac7-8792-b87d1d1d261c\",\r\n+              \"avatar\": \"https://res.lgdsunday.club/default-avatar.jpeg\"\r\n+          },\r\n+          {\r\n+              \"role\": [],\r\n+              \"_id\": \"654f247a8a667a5a1144de76\",\r\n+              \"id\": \"be2a2fe7-d71a-4294-a567-2346bcc767eb\",\r\n+              \"avatar\": \"https://res.lgdsunday.club/default-avatar.jpeg\"\r\n+          }\r\n+      ],\r\n+      \"total\": 31,\r\n+      \"page\": \"1\",\r\n+      \"size\": \"5\"\r\n+  },\r\n+  \"message\": \"success\"\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1699697933156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,5 @@\n {\r\n-  \"success\": true,\r\n-  \"code\": 200,\r\n-  \"data\": {\r\n       \"list\": [\r\n           {\r\n               \"role\": [\r\n                   {\r\n@@ -68,11 +65,6 @@\n               \"_id\": \"654f247a8a667a5a1144de76\",\r\n               \"id\": \"be2a2fe7-d71a-4294-a567-2346bcc767eb\",\r\n               \"avatar\": \"https://res.lgdsunday.club/default-avatar.jpeg\"\r\n           }\r\n-      ],\r\n-      \"total\": 31,\r\n-      \"page\": \"1\",\r\n-      \"size\": \"5\"\r\n-  },\r\n-  \"message\": \"success\"\r\n+      ]\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702123203985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,70 +0,0 @@\n-{\r\n-      \"list\": [\r\n-          {\r\n-              \"role\": [\r\n-                  {\r\n-                      \"id\": \"1\",\r\n-                      \"title\": \"超级管理员\"\r\n-                  }\r\n-              ],\r\n-              \"_id\": \"654e8bc0039db755c7698269\",\r\n-              \"id\": \"612710a9ec87aa543c9c3420\",\r\n-              \"openTime\": \"1433088000000\",\r\n-              \"username\": \"super-admin\",\r\n-              \"mobile\": \"188xxxx0001\",\r\n-              \"avatar\": \"https://m.imooc.com/static/wap/static/common/img/logo-small@2x.png\"\r\n-          },\r\n-          {\r\n-              \"role\": [\r\n-                  {\r\n-                      \"id\": \"2\",\r\n-                      \"title\": \"管理员\"\r\n-                  }\r\n-              ],\r\n-              \"_id\": \"654e8bc0039db755c769826a\",\r\n-              \"id\": \"612710a9ec87aa543c9c3421\",\r\n-              \"username\": \"admin\",\r\n-              \"openTime\": \"1559318400000\",\r\n-              \"mobile\": \"188xxxx0002\",\r\n-              \"avatar\": \"https://img4.sycdn.imooc.com/61110c2b0001152907400741-140-140.jpg\"\r\n-          },\r\n-          {\r\n-              \"role\": [\r\n-                  {\r\n-                      \"id\": \"6\",\r\n-                      \"title\": \"员工\"\r\n-                  },\r\n-                  {\r\n-                      \"id\": \"5\",\r\n-                      \"title\": \"保安队长\"\r\n-                  },\r\n-                  {\r\n-                      \"id\": \"4\",\r\n-                      \"title\": \"销售经理\"\r\n-                  },\r\n-                  {\r\n-                      \"id\": \"3\",\r\n-                      \"title\": \"人事经理\"\r\n-                  }\r\n-              ],\r\n-              \"_id\": \"654e8bc0039db755c769826b\",\r\n-              \"id\": \"612710a9ec87aa543c9c3422\",\r\n-              \"username\": \"test\",\r\n-              \"openTime\": \"1633017600000\",\r\n-              \"mobile\": \"188xxxx0003\",\r\n-              \"avatar\": \"https://res.lgdsunday.club/zhang-san.jpg\"\r\n-          },\r\n-          {\r\n-              \"role\": [],\r\n-              \"_id\": \"654f247a8a667a5a1144de75\",\r\n-              \"id\": \"ea4813e3-2275-4ac7-8792-b87d1d1d261c\",\r\n-              \"avatar\": \"https://res.lgdsunday.club/default-avatar.jpeg\"\r\n-          },\r\n-          {\r\n-              \"role\": [],\r\n-              \"_id\": \"654f247a8a667a5a1144de76\",\r\n-              \"id\": \"be2a2fe7-d71a-4294-a567-2346bcc767eb\",\r\n-              \"avatar\": \"https://res.lgdsunday.club/default-avatar.jpeg\"\r\n-          }\r\n-      ]\r\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1702199448977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,40 @@\n+import getDynamicData from './DynamicData'\r\n+import { watchSwitchLang } from '@/utils/i18n'\r\n+import { watch, ref } from 'vue'\r\n+\r\n+// 暴露出动态列数据\r\n+export const dynamicData = ref(getDynamicData())\r\n+\r\n+// 监听 语言变化\r\n+watchSwitchLang(() => {\r\n+  // 重新获取国际化的值\r\n+  dynamicData.value = getDynamicData()\r\n+  // 重新处理被勾选的列数据\r\n+  initSelectDynamicLabel()\r\n+})\r\n+\r\n+// 创建被勾选的动态列数据\r\n+export const selectDynamicLabel = ref([])\r\n+// 默认全部勾选\r\n+const initSelectDynamicLabel = () => {\r\n+  selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n+}\r\n+initSelectDynamicLabel()\r\n+\r\n+// 声明 table 的列数据\r\n+export const tableColumns = ref([])\r\n+// 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n+watch(\r\n+  selectDynamicLabel,\r\n+  (val) => {\r\n+    tableColumns.value = []\r\n+    // 遍历选中项\r\n+    const selectData = dynamicData.value.filter((item) => {\r\n+      return val.includes(item.label)\r\n+    })\r\n+    tableColumns.value.push(...selectData)\r\n+  },\r\n+  {\r\n+    immediate: true\r\n+  }\r\n+)\r\n"
                },
                {
                    "date": 1702205330084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,40 +0,0 @@\n-import getDynamicData from './DynamicData'\r\n-import { watchSwitchLang } from '@/utils/i18n'\r\n-import { watch, ref } from 'vue'\r\n-\r\n-// 暴露出动态列数据\r\n-export const dynamicData = ref(getDynamicData())\r\n-\r\n-// 监听 语言变化\r\n-watchSwitchLang(() => {\r\n-  // 重新获取国际化的值\r\n-  dynamicData.value = getDynamicData()\r\n-  // 重新处理被勾选的列数据\r\n-  initSelectDynamicLabel()\r\n-})\r\n-\r\n-// 创建被勾选的动态列数据\r\n-export const selectDynamicLabel = ref([])\r\n-// 默认全部勾选\r\n-const initSelectDynamicLabel = () => {\r\n-  selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n-}\r\n-initSelectDynamicLabel()\r\n-\r\n-// 声明 table 的列数据\r\n-export const tableColumns = ref([])\r\n-// 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n-watch(\r\n-  selectDynamicLabel,\r\n-  (val) => {\r\n-    tableColumns.value = []\r\n-    // 遍历选中项\r\n-    const selectData = dynamicData.value.filter((item) => {\r\n-      return val.includes(item.label)\r\n-    })\r\n-    tableColumns.value.push(...selectData)\r\n-  },\r\n-  {\r\n-    immediate: true\r\n-  }\r\n-)\r\n\\ No newline at end of file\n"
                }
            ],
            "date": 1695003307579,
            "name": "Commit-0",
            "content": "import path from 'path'\r\nimport i18n from '@/i18n'\r\n/**\r\n * 筛选出可供搜索的路由对象\r\n * @param routes 路由表\r\n * @param basePath 基础路径，默认为 /\r\n * @param prefixTitle\r\n */\r\nexport const generateRoutes = (routes, basePath = '/', prefixTitle = []) => {\r\n  // 创建 result 数据\r\n  let res = []\r\n  // 循环 routes 路由\r\n  for (const route of routes) {\r\n    // 创建包含 path 和 title 的 item\r\n    const data = {\r\n      path: path.resolve(basePath, route.path),\r\n      title: [...prefixTitle]\r\n    }\r\n    // 当前存在 meta 时，使用 i18n 解析国际化数据，组合成新的 title 内容\r\n    // 动态路由不允许被搜索\r\n    // 匹配动态路由的正则\r\n    const re = /.*\\/:.*/\r\n    if (route.meta && route.meta.title && !re.exec(route.path)) {\r\n      const i18ntitle = i18n.global.t(`msg.route.${route.meta.title}`)\r\n      data.title = [...data.title, i18ntitle]\r\n      res.push(data)\r\n    }\r\n\r\n    // 存在 children 时，迭代调用\r\n    if (route.children) {\r\n      const tempRoutes = generateRoutes(route.children, data.path, data.title)\r\n      if (tempRoutes.length >= 1) {\r\n        res = [...res, ...tempRoutes]\r\n      }\r\n    }\r\n  }\r\n  return res\r\n}\r\n"
        }
    ]
}