{
    "sourceFile": "src/views/article-ranking/dynamic/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 32,
            "patches": [
                {
                    "date": 1702200177634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1702200268410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,7 @@\n import { ref } from 'vue'\r\n import DynamicData from './DynamicData'\r\n \r\n-// 1: 暴露出动态的列数据  []\r\n+// 1: 创建出动态的列数据  []\r\n export const dynamicData = ref(DynamicData())\r\n+\r\n+// 2: 创建出被勾选的动态列数据\r\n"
                },
                {
                    "date": 1702200509351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,4 +4,5 @@\n // 1: 创建出动态的列数据  []\r\n export const dynamicData = ref(DynamicData())\r\n \r\n // 2: 创建出被勾选的动态列数据\r\n+export const selectDynamicLabel = ref([])\r\n"
                },
                {
                    "date": 1702200562372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,4 +5,7 @@\n export const dynamicData = ref(DynamicData())\r\n \r\n // 2: 创建出被勾选的动态列数据\r\n export const selectDynamicLabel = ref([])\r\n+\r\n+// 3: 声明 table的列数据\r\n+export const tableColumns = ref([])\r\n"
                },
                {
                    "date": 1702201042931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,14 @@\n import { ref } from 'vue'\r\n import DynamicData from './DynamicData'\r\n+import { watchSwitchLang } from '@/utils/i18n'\r\n \r\n // 1: 创建出动态的列数据  []\r\n export const dynamicData = ref(DynamicData())\r\n+// 监听语言变化，重新获取国际化的值\r\n+watchSwitchLang(() => {\r\n+  dynamicData.value = DynamicData()\r\n+})\r\n \r\n // 2: 创建出被勾选的动态列数据\r\n export const selectDynamicLabel = ref([])\r\n \r\n"
                },
                {
                    "date": 1702201183940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,20 @@\n+import { ref } from 'vue'\r\n+import DynamicData from './DynamicData'\r\n+import { watchSwitchLang } from '@/utils/i18n'\r\n+\r\n+// 1: 创建出动态的列数据  []\r\n+export const dynamicData = ref(DynamicData())\r\n+// 监听语言变化，重新获取国际化的值\r\n+watchSwitchLang(() => {\r\n+  dynamicData.value = DynamicData()\r\n+})\r\n+\r\n+// 2: 创建出被勾选的动态列数据\r\n+export const selectDynamicLabel = ref([])\r\n+// 默认全部勾选\r\n+const initSelectDynamicLabel = () => {\r\n+  selectDynamicLabel.value = dynamicData.value.map()\r\n+}\r\n+\r\n+// 3: 声明 table的列数据\r\n+export const tableColumns = ref([])\r\n"
                },
                {
                    "date": 1702201221176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n+import { watchSwitchLang } from '@/utils/i18n'\r\n import { ref } from 'vue'\r\n import DynamicData from './DynamicData'\r\n-import { watchSwitchLang } from '@/utils/i18n'\r\n \r\n // 1: 创建出动态的列数据  []\r\n export const dynamicData = ref(DynamicData())\r\n // 监听语言变化，重新获取国际化的值\r\n@@ -12,25 +12,9 @@\n // 2: 创建出被勾选的动态列数据\r\n export const selectDynamicLabel = ref([])\r\n // 默认全部勾选\r\n const initSelectDynamicLabel = () => {\r\n-  selectDynamicLabel.value = dynamicData.value.map()\r\n+  selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n }\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n-import { ref } from 'vue'\r\n-import DynamicData from './DynamicData'\r\n-import { watchSwitchLang } from '@/utils/i18n'\r\n-\r\n-// 1: 创建出动态的列数据  []\r\n-export const dynamicData = ref(DynamicData())\r\n-// 监听语言变化，重新获取国际化的值\r\n-watchSwitchLang(() => {\r\n-  dynamicData.value = DynamicData()\r\n-})\r\n-\r\n-// 2: 创建出被勾选的动态列数据\r\n-export const selectDynamicLabel = ref([])\r\n-\r\n-// 3: 声明 table的列数据\r\n-export const tableColumns = ref([])\r\n"
                },
                {
                    "date": 1702201230014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,7 +14,8 @@\n // 默认全部勾选\r\n const initSelectDynamicLabel = () => {\r\n   selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n }\r\n+initSelectDynamicLabel()\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n"
                },
                {
                    "date": 1702201265278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,10 @@\n export const dynamicData = ref(DynamicData())\r\n // 监听语言变化，重新获取国际化的值\r\n watchSwitchLang(() => {\r\n   dynamicData.value = DynamicData()\r\n+  // 重新处理被勾选的列数据\r\n+  initSelectDynamicLabel()\r\n })\r\n \r\n // 2: 创建出被勾选的动态列数据\r\n export const selectDynamicLabel = ref([])\r\n"
                },
                {
                    "date": 1702201681294,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,7 +17,11 @@\n const initSelectDynamicLabel = () => {\r\n   selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n }\r\n initSelectDynamicLabel()\r\n+// 语言变化后勾选\r\n+const changeSelectDynamicLabel = () => {\r\n+  selectDynamicLabel.value = \r\n+}\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n"
                },
                {
                    "date": 1702202089573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { watchSwitchLang } from '@/utils/i18n'\r\n-import { ref } from 'vue'\r\n+import { ref, watch } from 'vue'\r\n import DynamicData from './DynamicData'\r\n \r\n // 1: 创建出动态的列数据  []\r\n export const dynamicData = ref(DynamicData())\r\n@@ -17,11 +17,19 @@\n const initSelectDynamicLabel = () => {\r\n   selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n }\r\n initSelectDynamicLabel()\r\n-// 语言变化后勾选\r\n-const changeSelectDynamicLabel = () => {\r\n-  selectDynamicLabel.value = \r\n-}\r\n+// // 语言变化后勾选\r\n+// const changeSelectDynamicLabel = () => {\r\n+//   selectDynamicLabel.value =\r\n+// }\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n+watch(selectDynamicLabel, (val) => {\r\n+  tableColumns.value = []\r\n+  // 便利选中项\r\n+  const selectData = dynamicData.value.filter((item) => {\r\n+    return val.includes(item.label)\r\n+  })\r\n+  tableColumns.value.push(...selectData)\r\n+})\r\n"
                },
                {
                    "date": 1702202105728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,12 +24,18 @@\n // }\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n-watch(selectDynamicLabel, (val) => {\r\n-  tableColumns.value = []\r\n-  // 便利选中项\r\n-  const selectData = dynamicData.value.filter((item) => {\r\n-    return val.includes(item.label)\r\n-  })\r\n-  tableColumns.value.push(...selectData)\r\n-})\r\n+watch(\r\n+  selectDynamicLabel,\r\n+  (val) => {\r\n+    tableColumns.value = []\r\n+    // 便利选中项\r\n+    const selectData = dynamicData.value.filter((item) => {\r\n+      return val.includes(item.label)\r\n+    })\r\n+    tableColumns.value.push(...selectData)\r\n+  },\r\n+  {\r\n+    immediate: true\r\n+  }\r\n+)\r\n"
                },
                {
                    "date": 1702202162237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n // 1: 创建出动态的列数据  []\r\n export const dynamicData = ref(DynamicData())\r\n // 监听语言变化，重新获取国际化的值\r\n watchSwitchLang(() => {\r\n+  // 缓存\r\n   dynamicData.value = DynamicData()\r\n   // 重新处理被勾选的列数据\r\n   initSelectDynamicLabel()\r\n })\r\n@@ -24,8 +25,9 @@\n // }\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n+// 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n watch(\r\n   selectDynamicLabel,\r\n   (val) => {\r\n     tableColumns.value = []\r\n"
                },
                {
                    "date": 1702202262058,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,11 @@\n // 1: 创建出动态的列数据  []\r\n export const dynamicData = ref(DynamicData())\r\n // 监听语言变化，重新获取国际化的值\r\n watchSwitchLang(() => {\r\n-  // 缓存\r\n+  // 缓存选中项\r\n+  const catchSelect = []\r\n+\r\n   dynamicData.value = DynamicData()\r\n   // 重新处理被勾选的列数据\r\n   initSelectDynamicLabel()\r\n })\r\n@@ -30,9 +32,9 @@\n watch(\r\n   selectDynamicLabel,\r\n   (val) => {\r\n     tableColumns.value = []\r\n-    // 便利选中项\r\n+    // 遍历选中项\r\n     const selectData = dynamicData.value.filter((item) => {\r\n       return val.includes(item.label)\r\n     })\r\n     tableColumns.value.push(...selectData)\r\n"
                },
                {
                    "date": 1702202514113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,12 @@\n export const dynamicData = ref(DynamicData())\r\n // 监听语言变化，重新获取国际化的值\r\n watchSwitchLang(() => {\r\n   // 缓存选中项\r\n-  const catchSelect = []\r\n+  const catchSelect = selectDynamicLabel.value\r\n+  dynamicData.value.filter((item) => {\r\n+    return catchSelect.includes(item.label)\r\n+  })\r\n \r\n   dynamicData.value = DynamicData()\r\n   // 重新处理被勾选的列数据\r\n   initSelectDynamicLabel()\r\n"
                },
                {
                    "date": 1702202543489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,16 +6,15 @@\n export const dynamicData = ref(DynamicData())\r\n // 监听语言变化，重新获取国际化的值\r\n watchSwitchLang(() => {\r\n   // 缓存选中项\r\n-  const catchSelect = selectDynamicLabel.value\r\n-  dynamicData.value.filter((item) => {\r\n+  const catchSelect = dynamicData.value.filter((item) => {\r\n     return catchSelect.includes(item.label)\r\n   })\r\n \r\n   dynamicData.value = DynamicData()\r\n   // 重新处理被勾选的列数据\r\n-  initSelectDynamicLabel()\r\n+  changeSelectDynamicLabel()\r\n })\r\n \r\n // 2: 创建出被勾选的动态列数据\r\n export const selectDynamicLabel = ref([])\r\n@@ -23,12 +22,12 @@\n const initSelectDynamicLabel = () => {\r\n   selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n }\r\n initSelectDynamicLabel()\r\n-// // 语言变化后勾选\r\n-// const changeSelectDynamicLabel = () => {\r\n-//   selectDynamicLabel.value =\r\n-// }\r\n+// 语言变化后勾选\r\n+const changeSelectDynamicLabel = () => {\r\n+  selectDynamicLabel.value =\r\n+}\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n // 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n"
                },
                {
                    "date": 1702202636443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,14 @@\n // 监听语言变化，重新获取国际化的值\r\n watchSwitchLang(() => {\r\n   // 缓存选中项\r\n   const catchSelect = dynamicData.value.filter((item) => {\r\n-    return catchSelect.includes(item.label)\r\n+    return selectDynamicLabel.value.includes(item.label)\r\n   })\r\n \r\n   dynamicData.value = DynamicData()\r\n   // 重新处理被勾选的列数据\r\n-  changeSelectDynamicLabel()\r\n+  changeSelectDynamicLabel(catchSelect)\r\n })\r\n \r\n // 2: 创建出被勾选的动态列数据\r\n export const selectDynamicLabel = ref([])\r\n@@ -23,10 +23,10 @@\n   selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n }\r\n initSelectDynamicLabel()\r\n // 语言变化后勾选\r\n-const changeSelectDynamicLabel = () => {\r\n-  selectDynamicLabel.value =\r\n+const changeSelectDynamicLabel = (catchSelect) => {\r\n+  selectDynamicLabel.value = catchSelect\r\n }\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n"
                },
                {
                    "date": 1702202674751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,11 @@\n }\r\n initSelectDynamicLabel()\r\n // 语言变化后勾选\r\n const changeSelectDynamicLabel = (catchSelect) => {\r\n-  selectDynamicLabel.value = catchSelect\r\n+  selectDynamicLabel.value = catchSelect.map((item) => {\r\n+    item.label\r\n+  })\r\n }\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n"
                },
                {
                    "date": 1702202683386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+import { watchSwitchLang } from '@/utils/i18n'\r\n+import { ref, watch } from 'vue'\r\n+import DynamicData from './DynamicData'\r\n+\r\n+// 1: 创建出动态的列数据  []\r\n+export const dynamicData = ref(DynamicData())\r\n+// 监听语言变化，重新获取国际化的值\r\n+watchSwitchLang(() => {\r\n+  // 缓存选中项\r\n+  const catchSelect = dynamicData.value.filter((item) => {\r\n+    return selectDynamicLabel.value.includes(item.label)\r\n+  })\r\n+\r\n+  dynamicData.value = DynamicData()\r\n+  // 重新处理被勾选的列数据\r\n+  changeSelectDynamicLabel(catchSelect)\r\n+})\r\n+\r\n+// 2: 创建出被勾选的动态列数据\r\n+export const selectDynamicLabel = ref([])\r\n+// 默认全部勾选\r\n+const initSelectDynamicLabel = () => {\r\n+  selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n+}\r\n+initSelectDynamicLabel()\r\n+// 语言变化后勾选\r\n+const changeSelectDynamicLabel = (catchSelect) => {\r\n+  selectDynamicLabel.value = catchSelect.map((item) => item.label)\r\n+}\r\n+\r\n+// 3: 声明 table的列数据\r\n+export const tableColumns = ref([])\r\n+// 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n+watch(\r\n+  selectDynamicLabel,\r\n+  (val) => {\r\n+    tableColumns.value = []\r\n+    // 遍历选中项\r\n+    const selectData = dynamicData.value.filter((item) => {\r\n+      return val.includes(item.label)\r\n+    })\r\n+    tableColumns.value.push(...selectData)\r\n+  },\r\n+  {\r\n+    immediate: true\r\n+  }\r\n+)\r\n"
                },
                {
                    "date": 1702202789819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,59 +24,12 @@\n }\r\n initSelectDynamicLabel()\r\n // 语言变化后勾选\r\n const changeSelectDynamicLabel = (catchSelect) => {\r\n-  selectDynamicLabel.value = catchSelect.map((item) => item.label)\r\n-}\r\n-\r\n-// 3: 声明 table的列数据\r\n-export const tableColumns = ref([])\r\n-// 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n-watch(\r\n-  selectDynamicLabel,\r\n-  (val) => {\r\n-    tableColumns.value = []\r\n-    // 遍历选中项\r\n-    const selectData = dynamicData.value.filter((item) => {\r\n-      return val.includes(item.label)\r\n-    })\r\n-    tableColumns.value.push(...selectData)\r\n-  },\r\n-  {\r\n-    immediate: true\r\n-  }\r\n-)\r\n-import { watchSwitchLang } from '@/utils/i18n'\r\n-import { ref, watch } from 'vue'\r\n-import DynamicData from './DynamicData'\r\n-\r\n-// 1: 创建出动态的列数据  []\r\n-export const dynamicData = ref(DynamicData())\r\n-// 监听语言变化，重新获取国际化的值\r\n-watchSwitchLang(() => {\r\n-  // 缓存选中项\r\n-  const catchSelect = dynamicData.value.filter((item) => {\r\n-    return selectDynamicLabel.value.includes(item.label)\r\n+  selectDynamicLabel.value = dynamicData.value.filter((item) => {\r\n+    return catchSelect.includes(item.prop)\r\n   })\r\n-\r\n-  dynamicData.value = DynamicData()\r\n-  // 重新处理被勾选的列数据\r\n-  changeSelectDynamicLabel(catchSelect)\r\n-})\r\n-\r\n-// 2: 创建出被勾选的动态列数据\r\n-export const selectDynamicLabel = ref([])\r\n-// 默认全部勾选\r\n-const initSelectDynamicLabel = () => {\r\n-  selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n }\r\n-initSelectDynamicLabel()\r\n-// 语言变化后勾选\r\n-const changeSelectDynamicLabel = (catchSelect) => {\r\n-  selectDynamicLabel.value = catchSelect.map((item) => {\r\n-    item.label\r\n-  })\r\n-}\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n // 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n"
                },
                {
                    "date": 1702202815160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,16 +5,17 @@\n // 1: 创建出动态的列数据  []\r\n export const dynamicData = ref(DynamicData())\r\n // 监听语言变化，重新获取国际化的值\r\n watchSwitchLang(() => {\r\n-  // 缓存选中项\r\n-  const catchSelect = dynamicData.value.filter((item) => {\r\n-    return selectDynamicLabel.value.includes(item.label)\r\n-  })\r\n+  // // 缓存选中项\r\n+  // const catchSelect = dynamicData.value.filter((item) => {\r\n+  //   return selectDynamicLabel.value.includes(item.label)\r\n+  // })\r\n \r\n   dynamicData.value = DynamicData()\r\n   // 重新处理被勾选的列数据\r\n-  changeSelectDynamicLabel(catchSelect)\r\n+  initSelectDynamicLabel()\r\n+  // changeSelectDynamicLabel(catchSelect)\r\n })\r\n \r\n // 2: 创建出被勾选的动态列数据\r\n export const selectDynamicLabel = ref([])\r\n@@ -22,14 +23,14 @@\n const initSelectDynamicLabel = () => {\r\n   selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n }\r\n initSelectDynamicLabel()\r\n-// 语言变化后勾选\r\n-const changeSelectDynamicLabel = (catchSelect) => {\r\n-  selectDynamicLabel.value = dynamicData.value.filter((item) => {\r\n-    return catchSelect.includes(item.prop)\r\n-  })\r\n-}\r\n+// // 语言变化后勾选\r\n+// const changeSelectDynamicLabel = (catchSelect) => {\r\n+//   selectDynamicLabel.value = dynamicData.value.filter((item) => {\r\n+//     return catchSelect.includes(item.prop)\r\n+//   })\r\n+// }\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n // 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n"
                },
                {
                    "date": 1702203438138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,17 @@\n // 1: 创建出动态的列数据  []\r\n export const dynamicData = ref(DynamicData())\r\n // 监听语言变化，重新获取国际化的值\r\n watchSwitchLang(() => {\r\n-  // // 缓存选中项\r\n-  // const catchSelect = dynamicData.value.filter((item) => {\r\n-  //   return selectDynamicLabel.value.includes(item.label)\r\n-  // })\r\n+  // 缓存选中项\r\n+  const catchSelect = dynamicData.value.filter((item) => {\r\n+    return selectDynamicLabel.value.includes(item.label)\r\n+  })\r\n \r\n   dynamicData.value = DynamicData()\r\n   // 重新处理被勾选的列数据\r\n-  initSelectDynamicLabel()\r\n-  // changeSelectDynamicLabel(catchSelect)\r\n+  // initSelectDynamicLabel()\r\n+  changeSelectDynamicLabel(catchSelect)\r\n })\r\n \r\n // 2: 创建出被勾选的动态列数据\r\n export const selectDynamicLabel = ref([])\r\n@@ -23,14 +23,14 @@\n const initSelectDynamicLabel = () => {\r\n   selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n }\r\n initSelectDynamicLabel()\r\n-// // 语言变化后勾选\r\n-// const changeSelectDynamicLabel = (catchSelect) => {\r\n-//   selectDynamicLabel.value = dynamicData.value.filter((item) => {\r\n-//     return catchSelect.includes(item.prop)\r\n-//   })\r\n-// }\r\n+// 语言变化后勾选\r\n+const changeSelectDynamicLabel = (catchSelect) => {\r\n+  selectDynamicLabel.value = dynamicData.value.filter((item) => {\r\n+    return catchSelect.includes(item.prop)\r\n+  })\r\n+}\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n // 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n"
                },
                {
                    "date": 1702203503365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n   // 缓存选中项\r\n   const catchSelect = dynamicData.value.filter((item) => {\r\n     return selectDynamicLabel.value.includes(item.label)\r\n   })\r\n+  console.log('缓存选中项', catchSelect)\r\n \r\n   dynamicData.value = DynamicData()\r\n   // 重新处理被勾选的列数据\r\n   // initSelectDynamicLabel()\r\n"
                },
                {
                    "date": 1702203595372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n   // 缓存选中项\r\n   const catchSelect = dynamicData.value.filter((item) => {\r\n     return selectDynamicLabel.value.includes(item.label)\r\n   })\r\n-  console.log('缓存选中项', catchSelect)\r\n+  // console.log('缓存选中项', catchSelect)\r\n \r\n   dynamicData.value = DynamicData()\r\n   // 重新处理被勾选的列数据\r\n   // initSelectDynamicLabel()\r\n@@ -26,8 +26,10 @@\n }\r\n initSelectDynamicLabel()\r\n // 语言变化后勾选\r\n const changeSelectDynamicLabel = (catchSelect) => {\r\n+  console.log('缓存选中项', catchSelect)\r\n+\r\n   selectDynamicLabel.value = dynamicData.value.filter((item) => {\r\n     return catchSelect.includes(item.prop)\r\n   })\r\n }\r\n"
                },
                {
                    "date": 1702203715375,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,9 @@\n \r\n   selectDynamicLabel.value = dynamicData.value.filter((item) => {\r\n     return catchSelect.includes(item.prop)\r\n   })\r\n+  console.log('勾选后数据', selectDynamicLabel.value)\r\n }\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n"
                },
                {
                    "date": 1702203996672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,13 +27,16 @@\n initSelectDynamicLabel()\r\n // 语言变化后勾选\r\n const changeSelectDynamicLabel = (catchSelect) => {\r\n   console.log('缓存选中项', catchSelect)\r\n-\r\n-  selectDynamicLabel.value = dynamicData.value.filter((item) => {\r\n+  const catchData = dynamicData.value.filter((item) => {\r\n     return catchSelect.includes(item.prop)\r\n   })\r\n-  console.log('勾选后数据', selectDynamicLabel.value)\r\n+\r\n+  // selectDynamicLabel.value = dynamicData.value.filter((item) => {\r\n+  //   return catchSelect.includes(item.prop)\r\n+  // })\r\n+  console.log('勾选后数据', selectDynamicLabel.value, catchData)\r\n }\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n"
                },
                {
                    "date": 1702204161551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,16 +27,16 @@\n initSelectDynamicLabel()\r\n // 语言变化后勾选\r\n const changeSelectDynamicLabel = (catchSelect) => {\r\n   console.log('缓存选中项', catchSelect)\r\n-  const catchData = dynamicData.value.filter((item) => {\r\n+  // const catchData = dynamicData.value.filter((item) => {\r\n+  //   return catchSelect.includes(item.prop)\r\n+  // })\r\n+\r\n+  selectDynamicLabel.value = dynamicData.value.map((item) => {\r\n     return catchSelect.includes(item.prop)\r\n   })\r\n-\r\n-  // selectDynamicLabel.value = dynamicData.value.filter((item) => {\r\n-  //   return catchSelect.includes(item.prop)\r\n-  // })\r\n-  console.log('勾选后数据', selectDynamicLabel.value, catchData)\r\n+  console.log('勾选后数据', selectDynamicLabel.value)\r\n }\r\n \r\n // 3: 声明 table的列数据\r\n export const tableColumns = ref([])\r\n"
                },
                {
                    "date": 1702204298601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,11 +30,14 @@\n   console.log('缓存选中项', catchSelect)\r\n   // const catchData = dynamicData.value.filter((item) => {\r\n   //   return catchSelect.includes(item.prop)\r\n   // })\r\n+  const catchData = catchSelect.map((item) => item.prop)\r\n \r\n   selectDynamicLabel.value = dynamicData.value.map((item) => {\r\n-    return catchSelect.includes(item.prop)\r\n+    if (catchData.includes(item.prop)) {\r\n+      return item.label\r\n+    }\r\n   })\r\n   console.log('勾选后数据', selectDynamicLabel.value)\r\n }\r\n \r\n"
                },
                {
                    "date": 1702204611984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,14 +31,15 @@\n   // const catchData = dynamicData.value.filter((item) => {\r\n   //   return catchSelect.includes(item.prop)\r\n   // })\r\n   const catchData = catchSelect.map((item) => item.prop)\r\n-\r\n-  selectDynamicLabel.value = dynamicData.value.map((item) => {\r\n+  const catchselectDynamicLabel = []\r\n+  dynamicData.value.foreach((item) => {\r\n     if (catchData.includes(item.prop)) {\r\n-      return item.label\r\n+      catchselectDynamicLabel.push(item.label)\r\n     }\r\n   })\r\n+  selectDynamicLabel.value = catchselectDynamicLabel\r\n   console.log('勾选后数据', selectDynamicLabel.value)\r\n }\r\n \r\n // 3: 声明 table的列数据\r\n"
                },
                {
                    "date": 1702204648865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+import { watchSwitchLang } from '@/utils/i18n'\r\n+import { ref, watch } from 'vue'\r\n+import DynamicData from './DynamicData'\r\n+\r\n+// 1: 创建出动态的列数据  []\r\n+export const dynamicData = ref(DynamicData())\r\n+// 监听语言变化，重新获取国际化的值\r\n+watchSwitchLang(() => {\r\n+  // 缓存选中项\r\n+  const catchSelect = dynamicData.value.filter((item) => {\r\n+    return selectDynamicLabel.value.includes(item.label)\r\n+  })\r\n+  // console.log('缓存选中项', catchSelect)\r\n+\r\n+  dynamicData.value = DynamicData()\r\n+  // 重新处理被勾选的列数据\r\n+  // initSelectDynamicLabel()\r\n+  changeSelectDynamicLabel(catchSelect)\r\n+})\r\n+\r\n+// 2: 创建出被勾选的动态列数据\r\n+export const selectDynamicLabel = ref([])\r\n+// 默认全部勾选\r\n+const initSelectDynamicLabel = () => {\r\n+  selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n+}\r\n+initSelectDynamicLabel()\r\n+// 语言变化后勾选\r\n+const changeSelectDynamicLabel = (catchSelect) => {\r\n+  console.log('缓存选中项', catchSelect)\r\n+  // const catchData = dynamicData.value.filter((item) => {\r\n+  //   return catchSelect.includes(item.prop)\r\n+  // })\r\n+  const catchData = catchSelect.map((item) => item.prop)\r\n+  const catchselectDynamicLabel = []\r\n+  dynamicData.value.forEach((item) => {\r\n+    if (catchData.includes(item.prop)) {\r\n+      catchselectDynamicLabel.push(item.label)\r\n+    }\r\n+  })\r\n+  selectDynamicLabel.value = catchselectDynamicLabel\r\n+  console.log('勾选后数据', selectDynamicLabel.value)\r\n+}\r\n+\r\n+// 3: 声明 table的列数据\r\n+export const tableColumns = ref([])\r\n+// 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n+watch(\r\n+  selectDynamicLabel,\r\n+  (val) => {\r\n+    tableColumns.value = []\r\n+    // 遍历选中项\r\n+    const selectData = dynamicData.value.filter((item) => {\r\n+      return val.includes(item.label)\r\n+    })\r\n+    tableColumns.value.push(...selectData)\r\n+  },\r\n+  {\r\n+    immediate: true\r\n+  }\r\n+)\r\n"
                },
                {
                    "date": 1702204849154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,11 +27,8 @@\n initSelectDynamicLabel()\r\n // 语言变化后勾选\r\n const changeSelectDynamicLabel = (catchSelect) => {\r\n   console.log('缓存选中项', catchSelect)\r\n-  // const catchData = dynamicData.value.filter((item) => {\r\n-  //   return catchSelect.includes(item.prop)\r\n-  // })\r\n   const catchData = catchSelect.map((item) => item.prop)\r\n   const catchselectDynamicLabel = []\r\n   dynamicData.value.forEach((item) => {\r\n     if (catchData.includes(item.prop)) {\r\n@@ -58,65 +55,4 @@\n   {\r\n     immediate: true\r\n   }\r\n )\r\n-import { watchSwitchLang } from '@/utils/i18n'\r\n-import { ref, watch } from 'vue'\r\n-import DynamicData from './DynamicData'\r\n-\r\n-// 1: 创建出动态的列数据  []\r\n-export const dynamicData = ref(DynamicData())\r\n-// 监听语言变化，重新获取国际化的值\r\n-watchSwitchLang(() => {\r\n-  // 缓存选中项\r\n-  const catchSelect = dynamicData.value.filter((item) => {\r\n-    return selectDynamicLabel.value.includes(item.label)\r\n-  })\r\n-  // console.log('缓存选中项', catchSelect)\r\n-\r\n-  dynamicData.value = DynamicData()\r\n-  // 重新处理被勾选的列数据\r\n-  // initSelectDynamicLabel()\r\n-  changeSelectDynamicLabel(catchSelect)\r\n-})\r\n-\r\n-// 2: 创建出被勾选的动态列数据\r\n-export const selectDynamicLabel = ref([])\r\n-// 默认全部勾选\r\n-const initSelectDynamicLabel = () => {\r\n-  selectDynamicLabel.value = dynamicData.value.map((item) => item.label)\r\n-}\r\n-initSelectDynamicLabel()\r\n-// 语言变化后勾选\r\n-const changeSelectDynamicLabel = (catchSelect) => {\r\n-  console.log('缓存选中项', catchSelect)\r\n-  // const catchData = dynamicData.value.filter((item) => {\r\n-  //   return catchSelect.includes(item.prop)\r\n-  // })\r\n-  const catchData = catchSelect.map((item) => item.prop)\r\n-  const catchselectDynamicLabel = []\r\n-  dynamicData.value.foreach((item) => {\r\n-    if (catchData.includes(item.prop)) {\r\n-      catchselectDynamicLabel.push(item.label)\r\n-    }\r\n-  })\r\n-  selectDynamicLabel.value = catchselectDynamicLabel\r\n-  console.log('勾选后数据', selectDynamicLabel.value)\r\n-}\r\n-\r\n-// 3: 声明 table的列数据\r\n-export const tableColumns = ref([])\r\n-// 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n-watch(\r\n-  selectDynamicLabel,\r\n-  (val) => {\r\n-    tableColumns.value = []\r\n-    // 遍历选中项\r\n-    const selectData = dynamicData.value.filter((item) => {\r\n-      return val.includes(item.label)\r\n-    })\r\n-    tableColumns.value.push(...selectData)\r\n-  },\r\n-  {\r\n-    immediate: true\r\n-  }\r\n-)\r\n"
                },
                {
                    "date": 1702205007558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,11 @@\n // 语言变化后勾选\r\n const changeSelectDynamicLabel = (catchSelect) => {\r\n   console.log('缓存选中项', catchSelect)\r\n   const catchData = catchSelect.map((item) => item.prop)\r\n+  // 定义筛选后勾选的数据\r\n   const catchselectDynamicLabel = []\r\n+  // 遍历数组：筛选出包含选中项的数据\r\n   dynamicData.value.forEach((item) => {\r\n     if (catchData.includes(item.prop)) {\r\n       catchselectDynamicLabel.push(item.label)\r\n     }\r\n"
                },
                {
                    "date": 1702205119425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,9 @@\n // 监听选中项的变化，根据选中项动态改变 table 列数据的值\r\n watch(\r\n   selectDynamicLabel,\r\n   (val) => {\r\n+    console.log(val)\r\n     tableColumns.value = []\r\n     // 遍历选中项\r\n     const selectData = dynamicData.value.filter((item) => {\r\n       return val.includes(item.label)\r\n"
                }
            ],
            "date": 1702200177634,
            "name": "Commit-0",
            "content": "import { ref } from 'vue'\r\nimport DynamicData from './DynamicData'\r\n\r\n// 1: 暴露出动态的列数据  []\r\nexport const dynamicData = ref(DynamicData())\r\n"
        }
    ]
}